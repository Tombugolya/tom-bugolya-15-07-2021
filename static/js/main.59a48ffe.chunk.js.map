{"version":3,"sources":["store/reducers/themeReducer.ts","api/AccuWeatherAPI.ts","store/reducers/weatherReducer.ts","apiTest.ts","store/reducers/rootReducer.ts","store/StoreProvider.tsx","hooks/hooks.tsx","style/ThemeProvider.tsx","components/ThemeSwitch.tsx","components/Home/Search.tsx","components/Home/MainDisplay/ResultsDisplay.tsx","components/Home/MainDisplay/WeatherDisplay/WeatherSummary.tsx","components/Home/MainDisplay/WeatherDisplay/AddToFavoritesWidget.tsx","components/Home/MainDisplay/WeatherDisplay/FiveDayForecastWidget.tsx","components/Home/MainDisplay/WeatherDisplay/WeatherDisplay.tsx","components/Home/MainDisplay/MainDisplay.tsx","components/ErrorDisplay.tsx","pages/Home.tsx","components/Favorites/FavoritesGrid.tsx","routes/routes.ts","pages/Favorites.tsx","components/Links.tsx","components/Navbar/Navbar.tsx","pages/Routes.tsx","components/Content.tsx","pages/Main.tsx","index.tsx"],"names":["ThemeActionCode","initialState","dark","window","matchMedia","matches","EndPoint","theme","state","action","type","TOGGLE","WeatherActionCode","process","method","endPoint","query","key","queryParams","URLSearchParams","apikey","this","toString","response","fetch","to","error","data","ok","statusText","Error","json","q","request","AUTOCOMPLETE","CURRENT_CONDITIONS","FIVE_DAY_FORECAST","latitude","longitude","GEOPOSITION","GET_INFO_BY_KEY","id","Promise","all","getCurrentConditions","getLocationInfoByKey","getFiveDayForecast","callback","onError","console","log","getCombinedData","then","catch","TestObject","conditions","WeatherText","WeatherIcon","Temperature","Metric","Value","Imperial","info","Key","LocalizedName","Country","ID","AdministrativeArea","fiveDayForecast","DailyForecasts","EpochDate","Minimum","Unit","Maximum","Day","Icon","Night","celsius","favorites","current","searchResults","defaultKey","getCurrentPositionKey","a","navigator","geolocation","resolve","reject","getCurrentPosition","position","latLon","coords","AccuWeatherAPI","getGeopositionSearch","weather","ADD_FAVORITE","payload","REMOVE_FAVORITE","filter","CHANGE_CURRENT","ADD_RESULTS","results","RETURN","rootReducer","combineReducers","store","createStore","StoreProvider","children","useAppDispatch","useDispatch","useAppSelector","useSelector","ThemeProvider","darkMode","darkThemeEnabled","createTheme","palette","primary","main","contrastText","secondary","CssBaseline","Box","maxWidth","minHeight","bgcolor","ThemeSwitch","dispatch","Button","style","margin","onClick","size","Search","textFieldRef","useRef","display","width","justifyContent","alignItems","TextField","fullWidth","inputRef","value","getAutocompleteSearch","values","ResultsDisplay","useTheme","largeScreenBreakpoint","useMediaQuery","breakpoints","up","Grid","container","direction","spacing","map","index","textAlign","item","xs","lg","Card","CardActionArea","selected","getCombinedDataCallback","onCardSelected","CardContent","Typography","WeatherSummary","temperature","color","src","getImageUrl","alt","variant","ColorButton","withStyles","root","red","AddToFavoritesWidget","isFavorited","includes","FiveDayForecastWidget","forecast","getTemperatureRange","min","max","unit","Math","round","epochTime","minWidth","Date","getDay","WeatherDisplay","mediumScreenBreakpoint","flexDirection","fontSize","memo","MainDisplay","length","ErrorDisplay","getLatestErrorMessage","Home","useState","mount","setMount","setError","useAsyncEffect","FavoritesGrid","combinedDataArray","history","useHistory","combinedData","push","onCardClick","routes","home","name","component","setCombinedData","Links","Object","route","Link","RouterLink","Hidden","smDown","Navbar","marginLeft","fontStyle","Routes","path","exact","Content","Main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59a48ffe.chunk.js","sourcesContent":["import { AnyAction, Reducer } from 'redux';\n\ninterface ThemeState {\n  dark: boolean;\n}\n\nexport enum ThemeActionCode {\n  TOGGLE = 'TOGGLE_DARK_THEME',\n}\n\ninterface ThemeAction extends AnyAction {\n  type: ThemeActionCode;\n}\n\nconst initialState: ThemeState = {\n  dark: isBrowserDarkMode(),\n};\n\nfunction isBrowserDarkMode(): boolean {\n  if (window.matchMedia)\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  return false;\n}\n\nconst theme: Reducer<ThemeState, ThemeAction> = (\n  state: ThemeState = initialState,\n  action: ThemeAction\n) => {\n  switch (action.type) {\n    case ThemeActionCode.TOGGLE:\n      return { ...state, dark: !state.dark };\n    default:\n      return state;\n  }\n};\n\nexport default theme;\n","import to from 'await-to-js';\n\ninterface LatLon {\n  latitude: number;\n  longitude: number;\n}\n\nexport enum EndPoint {\n  AUTOCOMPLETE = 'locations/v1/cities/autocomplete/',\n  CURRENT_CONDITIONS = 'currentconditions/v1/',\n  FIVE_DAY_FORECAST = 'forecasts/v1/daily/5day/',\n  GEOPOSITION = 'locations/v1/cities/geoposition/search/',\n  GET_INFO_BY_KEY = 'locations/v1/',\n}\n\nexport interface LocationInfoResponse {\n  Key: string;\n  LocalizedName: string;\n  Country: { ID: string; LocalizedName: string };\n  AdministrativeArea: { ID: string; LocalizedName: string };\n}\n\nexport interface CurrentConditionsResponse {\n  WeatherText: string;\n  WeatherIcon: number;\n  Temperature: {\n    Metric: {\n      Value: number;\n    };\n    Imperial: {\n      Value: number;\n    };\n  };\n}\n\ninterface SingleForecast {\n  EpochDate: number;\n  Temperature: {\n    Minimum: {\n      Value: number;\n      Unit: 'F' | 'C';\n    };\n    Maximum: {\n      Value: number;\n      Unit: 'F' | 'C';\n    };\n  };\n  Day: {\n    Icon: number;\n  };\n  Night: {\n    Icon: number;\n  };\n}\n\nexport interface FiveDayForecastResponse {\n  DailyForecasts: SingleForecast[];\n}\n\ninterface GeopositionResponse {\n  Key: string;\n}\n\nexport type CombinedData = [\n  CurrentConditionsResponse,\n  LocationInfoResponse,\n  FiveDayForecastResponse\n];\n\ninterface RequestParameters {\n  endPoint: EndPoint;\n  query?: Partial<{ q: string }>;\n  key?: string;\n}\n\nclass AccuWeatherApi {\n  readonly #url: string = 'https://dataservice.accuweather.com/';\n  readonly #apiKey: string = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n  readonly #assetsUrl: string =\n    'https://herolo-assets.s3.us-east-2.amazonaws.com/images/';\n  readonly #headers = {\n    method: 'GET',\n  };\n  #latestError: string;\n\n  public async request<T>({\n    endPoint,\n    query = {},\n    key = '',\n  }: RequestParameters): Promise<T> {\n    const queryParams = new URLSearchParams({\n      apikey: this.#apiKey,\n      ...query,\n    }).toString();\n    const response = fetch(\n      `${this.#url}${endPoint}${key}?${queryParams}`,\n      this.#headers\n    );\n    const [error, data] = await to(response);\n    if (error || !data.ok) {\n      this.#latestError = `Failed due to: ${error || data.statusText}`;\n      throw new Error(`Failed due to: ${error || data.statusText}`);\n    }\n    return (await data.json()) as Promise<T>;\n  }\n\n  public async getAutocompleteSearch(\n    q: string\n  ): Promise<LocationInfoResponse[]> {\n    return await this.request<LocationInfoResponse[]>({\n      endPoint: EndPoint.AUTOCOMPLETE,\n      query: { q },\n    });\n  }\n\n  public async getCurrentConditions(\n    key: string\n  ): Promise<CurrentConditionsResponse> {\n    return await this.request<CurrentConditionsResponse>({\n      endPoint: EndPoint.CURRENT_CONDITIONS,\n      key,\n    });\n  }\n\n  public async getFiveDayForecast(\n    key: string\n  ): Promise<FiveDayForecastResponse> {\n    return await this.request<FiveDayForecastResponse>({\n      endPoint: EndPoint.FIVE_DAY_FORECAST,\n      key,\n    });\n  }\n\n  public async getGeopositionSearch({\n    latitude,\n    longitude,\n  }: LatLon): Promise<GeopositionResponse> {\n    return await this.request<GeopositionResponse>({\n      endPoint: EndPoint.GEOPOSITION,\n      query: {\n        q: `${latitude},${longitude}`,\n      },\n    });\n  }\n\n  public async getLocationInfoByKey(\n    key: string\n  ): Promise<LocationInfoResponse> {\n    return await this.request<LocationInfoResponse>({\n      endPoint: EndPoint.GET_INFO_BY_KEY,\n      key,\n    });\n  }\n\n  public getImageUrl(id: number): string {\n    return `${this.#assetsUrl}${id}-s.png`;\n  }\n\n  public async getCombinedData(key: string): Promise<CombinedData> {\n    return Promise.all([\n      this.getCurrentConditions(key),\n      this.getLocationInfoByKey(key),\n      this.getFiveDayForecast(key),\n    ]);\n  }\n\n  public getCombinedDataCallback(\n    key: string,\n    callback: (combinedData: CombinedData) => void,\n    onError: (e: any) => void = console.log\n  ): void {\n    this.getCombinedData(key).then(callback).catch(onError);\n  }\n\n  public getLatestErrorMessage(): string {\n    return this.#latestError;\n  }\n}\n\nexport default new AccuWeatherApi();\n","import AccuWeatherAPI, {\n  LocationInfoResponse,\n  CurrentConditionsResponse,\n  FiveDayForecastResponse,\n} from '../../api/AccuWeatherAPI';\nimport { AnyAction, Reducer } from 'redux';\nimport to from 'await-to-js';\nimport TestObject from '../../apiTest';\n\ninterface WeatherState {\n  celsius: boolean;\n  favorites: string[];\n  current: {\n    conditions: CurrentConditionsResponse;\n    info: LocationInfoResponse;\n    fiveDayForecast: FiveDayForecastResponse;\n  };\n  searchResults: LocationInfoResponse[];\n}\n\nexport enum WeatherActionCode {\n  TOGGLE = 'TOGGLE_CELSIUS_FAHRENHEIT',\n  ADD_FAVORITE = 'ADD_WEATHER_KEY_TO_FAVORITES',\n  REMOVE_FAVORITE = 'REMOVE_WEATHER_KEY_FROM_FAVORITES',\n  CHANGE_CURRENT = 'CHANGE_CURRENT_WEATHER_KEY',\n  ADD_RESULTS = 'ADD_AUTOCOMPLETE_WEATHER_RESULTS',\n  RETURN = 'RETURN_TO_MAIN_DISPLAY',\n}\n\ninterface WeatherAction extends AnyAction {\n  type: WeatherActionCode;\n  payload?: {\n    key?: string;\n    results?: LocationInfoResponse[];\n    current?: {\n      conditions: CurrentConditionsResponse;\n      info: LocationInfoResponse;\n      fiveDayForecast: FiveDayForecastResponse;\n    };\n  };\n}\n\nconst initialState: WeatherState = {\n  celsius: true,\n  favorites: [],\n  current: TestObject,\n  searchResults: [],\n};\n\nconst defaultKey = '3383898';\n\nexport async function getCurrentPositionKey(): Promise<string> {\n  if (navigator && navigator.geolocation) {\n    const position = await new Promise(\n      (resolve: (g: GeolocationPosition) => void, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      }\n    );\n    const latLon = {\n      longitude: position.coords.longitude,\n      latitude: position.coords.latitude,\n    };\n    const [error, data] = await to(AccuWeatherAPI.getGeopositionSearch(latLon));\n    if (error) return defaultKey;\n    return data!.Key;\n  }\n  return defaultKey;\n}\n\nconst weather: Reducer<WeatherState, WeatherAction> = (\n  state: WeatherState = initialState,\n  action: WeatherAction\n) => {\n  switch (action.type) {\n    case WeatherActionCode.TOGGLE:\n      return { ...state, celsius: !state.celsius };\n    case WeatherActionCode.ADD_FAVORITE:\n      return {\n        ...state,\n        favorites: [...state.favorites, action.payload.key],\n      };\n    case WeatherActionCode.REMOVE_FAVORITE:\n      return {\n        ...state,\n        favorites: state.favorites.filter((key) => key !== action.payload.key),\n      };\n    case WeatherActionCode.CHANGE_CURRENT:\n      return {\n        ...state,\n        current: action.payload.current,\n      };\n    case WeatherActionCode.ADD_RESULTS:\n      return {\n        ...state,\n        searchResults: action.payload.results,\n      };\n    case WeatherActionCode.RETURN:\n      return {\n        ...state,\n        searchResults: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default weather;\n","import {\n  CurrentConditionsResponse,\n  FiveDayForecastResponse,\n  LocationInfoResponse,\n} from './api/AccuWeatherAPI';\n\nconst TestObject: {\n  conditions: CurrentConditionsResponse;\n  info: LocationInfoResponse;\n  fiveDayForecast: FiveDayForecastResponse;\n} = {\n  conditions: {\n    WeatherText: 'Mostly cloudy',\n    WeatherIcon: 6,\n    Temperature: {\n      Metric: {\n        Value: 22.2,\n      },\n      Imperial: {\n        Value: 72,\n      },\n    },\n  },\n  info: {\n    Key: '221329',\n    LocalizedName: 'Georgia',\n    Country: {\n      ID: 'JM',\n      LocalizedName: 'Jamaica',\n    },\n    AdministrativeArea: {\n      ID: '07',\n      LocalizedName: 'Trelawny',\n    },\n  },\n  fiveDayForecast: {\n    DailyForecasts: [\n      {\n        EpochDate: 1626346800,\n        Temperature: {\n          Minimum: {\n            Value: 56,\n            Unit: 'F',\n          },\n          Maximum: {\n            Value: 77,\n            Unit: 'F',\n          },\n        },\n        Day: {\n          Icon: 18,\n        },\n        Night: {\n          Icon: 35,\n        },\n      },\n      {\n        EpochDate: 1626433200,\n        Temperature: {\n          Minimum: {\n            Value: 60,\n            Unit: 'F',\n          },\n          Maximum: {\n            Value: 74,\n            Unit: 'F',\n          },\n        },\n        Day: {\n          Icon: 4,\n        },\n        Night: {\n          Icon: 40,\n        },\n      },\n      {\n        EpochDate: 1626519600,\n        Temperature: {\n          Minimum: {\n            Value: 59,\n            Unit: 'F',\n          },\n          Maximum: {\n            Value: 75,\n            Unit: 'F',\n          },\n        },\n        Day: {\n          Icon: 12,\n        },\n        Night: {\n          Icon: 7,\n        },\n      },\n      {\n        EpochDate: 1626606000,\n        Temperature: {\n          Minimum: {\n            Value: 60,\n            Unit: 'F',\n          },\n          Maximum: {\n            Value: 79,\n            Unit: 'F',\n          },\n        },\n        Day: {\n          Icon: 12,\n        },\n        Night: {\n          Icon: 34,\n        },\n      },\n      {\n        EpochDate: 1626692400,\n        Temperature: {\n          Minimum: {\n            Value: 62,\n            Unit: 'F',\n          },\n          Maximum: {\n            Value: 79,\n            Unit: 'F',\n          },\n        },\n        Day: {\n          Icon: 1,\n        },\n        Night: {\n          Icon: 34,\n        },\n      },\n    ],\n  },\n};\n\nexport default TestObject;\n","import theme from './themeReducer';\nimport weather from './weatherReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({ theme, weather });\nexport default rootReducer;\n","import rootReducer from './reducers/rootReducer';\nimport { createStore } from 'redux';\nimport { FC } from 'react';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  rootReducer,\n  {},\n  (window as any)['__REDUX_DEVTOOLS_EXTENSION__'] &&\n    (window as any)['__REDUX_DEVTOOLS_EXTENSION__']()\n);\nconst StoreProvider: FC = ({ children }) => {\n  return <Provider store={store}>{children}</Provider>;\n};\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport default StoreProvider;\n","import { AppDispatch, RootState } from '../store/StoreProvider';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FC } from 'react';\nimport { useAppSelector } from '../hooks/hooks';\nimport { Box, createTheme, CssBaseline } from '@material-ui/core';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\n\nfunction theme(darkMode: boolean) {\n  return createTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light',\n      primary: {\n        main: '#002884',\n        contrastText: '#fff',\n      },\n      secondary: {\n        main: '#606CA8',\n        contrastText: '#000',\n      },\n    },\n  });\n}\n\nconst ThemeProvider: FC = ({ children }) => {\n  const darkThemeEnabled = useAppSelector((state) => state.theme.dark);\n  return (\n    <MuiThemeProvider theme={theme(darkThemeEnabled)}>\n      <CssBaseline>\n        <Box maxWidth=\"100vw\" minHeight=\"100vh\" bgcolor=\"background.paper\">\n          {children}\n        </Box>\n      </CssBaseline>\n    </MuiThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import { useAppDispatch, useAppSelector } from '../hooks/hooks';\nimport { Button } from '@material-ui/core';\nimport { MoonFill, SunFill } from 'react-bootstrap-icons';\nimport { ThemeActionCode } from '../store/reducers/themeReducer';\nimport { WeatherActionCode } from '../store/reducers/weatherReducer';\n\nconst ThemeSwitch = () => {\n  const dispatch = useAppDispatch();\n  const darkThemeEnabled = useAppSelector((state) => state.theme.dark);\n  const celsius = useAppSelector((state) => state.weather.celsius);\n\n  return (\n    <>\n      <Button\n        style={{ margin: '1em' }}\n        onClick={() => dispatch({ type: ThemeActionCode.TOGGLE })}\n      >\n        {darkThemeEnabled ? <SunFill size={15} /> : <MoonFill size={15} />}\n      </Button>\n      <Button\n        style={{ margin: '1em' }}\n        onClick={() => dispatch({ type: WeatherActionCode.TOGGLE })}\n      >\n        {celsius ? 'F' : 'C'}\n      </Button>\n    </>\n  );\n};\n\nexport default ThemeSwitch;\n","import AccuWeatherAPI from '../../api/AccuWeatherAPI';\nimport { FC, useRef } from 'react';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { useAppDispatch } from '../../hooks/hooks';\nimport { WeatherActionCode } from '../../store/reducers/weatherReducer';\n\nconst Search: FC = () => {\n  const textFieldRef = useRef<HTMLInputElement>();\n  const dispatch = useAppDispatch();\n  const onSearch = () => {\n    if (textFieldRef.current.value === '')\n      dispatch({ type: WeatherActionCode.RETURN });\n    else\n      AccuWeatherAPI.getAutocompleteSearch(textFieldRef.current.value).then(\n        (values) => {\n          dispatch({\n            type: WeatherActionCode.ADD_RESULTS,\n            payload: { results: values },\n          });\n        }\n      );\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      width=\"40%\"\n      margin=\"2em\"\n      justifyContent=\"space-around\"\n      alignItems=\"center\"\n    >\n      <TextField fullWidth type=\"search\" inputRef={textFieldRef} />\n      <Button onClick={onSearch}>Search</Button>\n    </Box>\n  );\n};\n\nexport default Search;\n","import AccuWeatherAPI, {\n  LocationInfoResponse,\n} from '../../../api/AccuWeatherAPI';\nimport { WeatherActionCode } from '../../../store/reducers/weatherReducer';\nimport { FC } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../hooks/hooks';\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  Grid,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\n\nconst ResultsDisplay: FC = () => {\n  const results = useAppSelector((state) => state.weather.searchResults);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const largeScreenBreakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const onCardSelected = (selected: LocationInfoResponse) => {\n    const key = selected.Key;\n    AccuWeatherAPI.getCombinedDataCallback(\n      key,\n      ([conditions, info, fiveDayForecast]) => {\n        dispatch({\n          type: WeatherActionCode.CHANGE_CURRENT,\n          payload: { current: { conditions, info, fiveDayForecast } },\n        });\n        dispatch({ type: WeatherActionCode.RETURN });\n      }\n    );\n  };\n\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" spacing={5}>\n      {results.map((info, index) => (\n        <Grid\n          style={{ margin: '1em', textAlign: 'center' }}\n          item\n          key={index}\n          xs={12}\n          lg={2}\n        >\n          <Card\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <CardActionArea\n              style={{ minHeight: largeScreenBreakpoint ? '20vh' : '10vh' }}\n              onClick={() => onCardSelected(info)}\n            >\n              <CardContent>\n                <Typography>\n                  {info.LocalizedName}, {info.AdministrativeArea.LocalizedName},{' '}\n                  {info.Country.LocalizedName}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ResultsDisplay;\n","import AccuWeatherAPI, {\n  CurrentConditionsResponse,\n  LocationInfoResponse,\n} from '../../../../api/AccuWeatherAPI';\nimport { FC } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport { useAppSelector } from '../../../../hooks/hooks';\n\ninterface WeatherSummaryProps {\n  conditions: CurrentConditionsResponse;\n  info: LocationInfoResponse;\n}\n\nconst WeatherSummary: FC<WeatherSummaryProps> = ({ conditions, info }) => {\n  const { WeatherIcon, Temperature } = conditions;\n  const { LocalizedName } = info;\n  const celsius = useAppSelector((state) => state.weather.celsius);\n  const temperature = Temperature[celsius ? 'Metric' : 'Imperial'].Value;\n  return (\n    <Box\n      display=\"flex\"\n      width=\"30vw\"\n      alignItems=\"center\"\n      color=\"background.main\"\n      style={{ margin: '2em' }}\n    >\n      <div>\n        <img\n          src={AccuWeatherAPI.getImageUrl(WeatherIcon)}\n          alt=\"weather-summary-icon\"\n        />\n      </div>\n      <Box>\n        <Typography variant=\"h5\" color=\"textPrimary\">\n          {LocalizedName}\n        </Typography>\n        <Typography variant=\"h5\" color=\"textPrimary\">\n          {temperature}° {celsius ? 'C' : 'F'}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default WeatherSummary;\n","import { FC } from 'react';\nimport { HeartFill, Heart } from 'react-bootstrap-icons';\nimport { Box, Button, withStyles } from '@material-ui/core';\nimport { LocationInfoResponse } from '../../../../api/AccuWeatherAPI';\nimport { WeatherActionCode } from '../../../../store/reducers/weatherReducer';\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/hooks';\nimport { red } from '@material-ui/core/colors';\n\ninterface AddToFavoritesWidgetProps {\n  info: LocationInfoResponse;\n}\n\nconst ColorButton = withStyles(() => ({\n  root: {\n    color: red[500],\n  },\n}))(Button);\n\nconst AddToFavoritesWidget: FC<AddToFavoritesWidgetProps> = ({ info }) => {\n  const { Key } = info;\n  const dispatch = useAppDispatch();\n  const favorites = useAppSelector((state) => state.weather.favorites);\n  const isFavorited = favorites.includes(Key);\n\n  const onAddToFavoritesClick = () => {\n    dispatch({\n      type: isFavorited\n        ? WeatherActionCode.REMOVE_FAVORITE\n        : WeatherActionCode.ADD_FAVORITE,\n      payload: { key: Key },\n    });\n  };\n\n  return (\n    <Box\n      color=\"secondary.main\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-around\"\n    >\n      <ColorButton onClick={onAddToFavoritesClick}>\n        {isFavorited ? <HeartFill size={50} /> : <Heart size={50} />}\n      </ColorButton>\n    </Box>\n  );\n};\n\nexport default AddToFavoritesWidget;\n","import AccuWeatherAPI, {\n  FiveDayForecastResponse,\n} from '../../../../api/AccuWeatherAPI';\nimport { FC } from 'react';\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport { useAppSelector } from '../../../../hooks/hooks';\n\ninterface FiveDayForecastWidgetProps {\n  forecast: FiveDayForecastResponse;\n}\n\nconst FiveDayForecastWidget: FC<FiveDayForecastWidgetProps> = ({\n  forecast,\n}) => {\n  const celsius = useAppSelector((state) => state.weather.celsius);\n  const getDayFromEpoch = (epochTime: number): string => {\n    const days = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ];\n    return days[new Date(epochTime * 1000).getDay()];\n  };\n  const getTemperatureRange = (\n    min: { Value: number; Unit: 'F' | 'C' },\n    max: { Value: number; Unit: 'F' | 'C' }\n  ): string => {\n    const unit = min.Unit;\n    const apiUnit = unit === 'C';\n    if (apiUnit === celsius) return `${min.Value}°-${max.Value}° ${unit}`;\n    if (min.Unit === 'F')\n      return `${Math.round((min.Value - 30) / 2)}°-${Math.round(\n        (max.Value - 30) / 2\n      )}° C`;\n    return `${Math.round(min.Value * 2 + 30)}°-${Math.round(\n      max.Value * 2 + 30\n    )}° F`;\n  };\n\n  return (\n    <Grid direction=\"row\" justifyContent=\"center\" container>\n      {forecast.DailyForecasts.map((forecast, index) => {\n        const max = forecast.Temperature.Maximum;\n        const min = forecast.Temperature.Minimum;\n        return (\n          <Grid style={{ margin: '2em', minWidth: '20em' }} item key={index}>\n            <Card>\n              <CardActionArea>\n                <CardContent style={{ textAlign: 'center' }}>\n                  <Typography variant=\"h6\">\n                    {getDayFromEpoch(forecast.EpochDate)}\n                  </Typography>\n                  <div>\n                    <Typography>Day</Typography>\n                    <img\n                      src={AccuWeatherAPI.getImageUrl(forecast.Day.Icon)}\n                      alt=\"day-weather-icon\"\n                    />\n                  </div>\n                  <Typography>Range {getTemperatureRange(min, max)}</Typography>\n                  <div>\n                    <img\n                      src={AccuWeatherAPI.getImageUrl(forecast.Night.Icon)}\n                      alt=\"night-weather-icon\"\n                    />\n                    <Typography>Night</Typography>\n                  </div>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default FiveDayForecastWidget;\n","import WeatherSummary from './WeatherSummary';\nimport AddToFavoritesWidget from './AddToFavoritesWidget';\nimport FiveDayForecastWidget from './FiveDayForecastWidget';\nimport { FC, memo } from 'react';\nimport { useAppSelector } from '../../../../hooks/hooks';\nimport { Box, Typography, useMediaQuery, useTheme } from '@material-ui/core';\n\nconst WeatherDisplay: FC = () => {\n  const current = useAppSelector((state) => state.weather.current);\n  const { conditions, info, fiveDayForecast } = current;\n  const theme = useTheme();\n  const mediumScreenBreakpoint = useMediaQuery(theme.breakpoints.up('md'));\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      {current && (\n        <>\n          <Box\n            display=\"flex\"\n            width=\"80%\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <WeatherSummary conditions={conditions} info={info} />\n            <AddToFavoritesWidget info={info} />\n          </Box>\n          <Box style={{ margin: '0 auto' }} color=\"secondary.main\">\n            <Typography\n              variant=\"h2\"\n              color=\"textPrimary\"\n              style={{ fontSize: mediumScreenBreakpoint ? '4em' : '3em' }}\n            >\n              \"{current.conditions.WeatherText}\"\n            </Typography>\n          </Box>\n          <FiveDayForecastWidget forecast={fiveDayForecast} />\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(WeatherDisplay);\n","import ResultsDisplay from './ResultsDisplay';\nimport WeatherDisplay from './WeatherDisplay/WeatherDisplay';\nimport { FC } from 'react';\nimport { useAppSelector } from '../../../hooks/hooks';\nimport { Box } from '@material-ui/core';\n\nconst MainDisplay: FC = () => {\n  const results = useAppSelector((state) => state.weather.searchResults);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      width=\"100%\"\n      minHeight=\"75vh\"\n      bgcolor=\"background.default\"\n    >\n      {results.length ? <ResultsDisplay /> : <WeatherDisplay />}\n    </Box>\n  );\n};\n\nexport default MainDisplay;\n","import AccuWeatherAPI from '../api/AccuWeatherAPI';\nimport { FC } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nconst ErrorDisplay: FC = () => {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n      width=\"100%\"\n      minHeight=\"75vh\"\n      bgcolor=\"background.default\"\n    >\n      <Typography variant=\"h3\">\n        Whoops seems like we have encountered an issue!\n      </Typography>\n      <Typography variant=\"h3\">Here's the last known error:</Typography>\n      <Typography variant=\"h3\" style={{ color: 'red' }}>\n        {AccuWeatherAPI.getLatestErrorMessage()}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default ErrorDisplay;\n","import Search from '../components/Home/Search';\nimport MainDisplay from '../components/Home/MainDisplay/MainDisplay';\nimport ErrorDisplay from '../components/ErrorDisplay';\nimport AccuWeatherAPI from '../api/AccuWeatherAPI';\nimport useAsyncEffect from 'use-async-effect';\nimport { FC, useState } from 'react';\nimport {\n  getCurrentPositionKey,\n  WeatherActionCode,\n} from '../store/reducers/weatherReducer';\nimport { useAppDispatch } from '../hooks/hooks';\n\nconst Home: FC = () => {\n  const dispatch = useAppDispatch();\n  const [mount, setMount] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  useAsyncEffect(async () => {\n    const key = await getCurrentPositionKey();\n    AccuWeatherAPI.getCombinedDataCallback(\n      key,\n      ([conditions, info, fiveDayForecast]) => {\n        dispatch({\n          type: WeatherActionCode.CHANGE_CURRENT,\n          payload: { current: { info, conditions, fiveDayForecast } },\n        });\n        setMount(true);\n      },\n      () => setError(true)\n    );\n  }, []);\n\n  return (\n    <>\n      <Search />\n      {mount && <MainDisplay />}\n      {error && <ErrorDisplay />}\n    </>\n  );\n};\n\nexport default Home;\n","import AccuWeatherAPI, { CombinedData } from '../../api/AccuWeatherAPI';\nimport { FC } from 'react';\nimport { WeatherActionCode } from '../../store/reducers/weatherReducer';\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks';\nimport { useHistory } from 'react-router-dom';\n\ninterface FavoritesGridProps {\n  combinedDataArray: CombinedData[];\n}\n\nconst FavoritesGrid: FC<FavoritesGridProps> = ({ combinedDataArray }) => {\n  const celsius = useAppSelector((state) => state.weather.celsius);\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n\n  const onCardClick = (combinedData: CombinedData) => {\n    const [conditions, info, fiveDayForecast] = combinedData;\n    dispatch({\n      type: WeatherActionCode.CHANGE_CURRENT,\n      payload: { current: { conditions, info, fiveDayForecast } },\n    });\n    history.push('/');\n  };\n\n  return (\n    <Grid\n      style={{ width: '90%' }}\n      direction=\"row\"\n      justifyContent=\"center\"\n      container\n    >\n      {combinedDataArray.map((combinedData, index) => {\n        const [conditions, info] = combinedData;\n        const temperature = celsius\n          ? conditions.Temperature.Metric.Value\n          : conditions.Temperature.Imperial.Value;\n        const unit = celsius ? 'C' : 'F';\n        return (\n          <Grid style={{ margin: '2em', minWidth: '20em' }} item key={index}>\n            <Card>\n              <CardActionArea onClick={() => onCardClick(combinedData)}>\n                <CardContent style={{ textAlign: 'center' }}>\n                  <Typography>{info.LocalizedName}</Typography>\n                  <Typography>\n                    {temperature}° {unit}\n                  </Typography>\n                  <div>\n                    <img\n                      src={AccuWeatherAPI.getImageUrl(conditions.WeatherIcon)}\n                      alt={`favorites-weather-icon-${index}`}\n                    />\n                  </div>\n                  <Typography>{conditions.WeatherText}</Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default FavoritesGrid;\n","import Home from '../pages/Home';\nimport Favorites from '../pages/Favorites';\n\nconst routes = {\n  home: {\n    name: 'Home',\n    to: '/',\n    component: Home,\n  },\n  favorites: {\n    name: 'Favorites',\n    to: '/favorites',\n    component: Favorites,\n  },\n};\n\nexport default routes;\n","import useAsyncEffect from 'use-async-effect';\nimport AccuWeatherAPI, { CombinedData } from '../api/AccuWeatherAPI';\nimport FavoritesGrid from '../components/Favorites/FavoritesGrid';\n\nimport { FC, useState } from 'react';\nimport { useAppSelector } from '../hooks/hooks';\nimport { Typography } from '@material-ui/core';\n\nconst Favorites: FC = () => {\n  const favorites = useAppSelector((state) => state.weather.favorites);\n  const [combinedData, setCombinedData] = useState<CombinedData[]>([]);\n  const [mount, setMount] = useState<boolean>(false);\n\n  useAsyncEffect(async () => {\n    const combinedDataArray = await Promise.all(\n      favorites.map(\n        async (key: string) => await AccuWeatherAPI.getCombinedData(key)\n      )\n    );\n    setCombinedData(combinedDataArray);\n    setMount(true);\n    return () => setMount(false);\n  }, []);\n\n  return (\n    <>\n      <Typography variant=\"h3\" style={{ margin: '1em' }} color=\"textPrimary\">\n        Favorites Page\n      </Typography>\n      {mount && <FavoritesGrid combinedDataArray={combinedData} />}\n    </>\n  );\n};\n\nexport default Favorites;\n","import Switches from './ThemeSwitch';\nimport routes from '../routes/routes';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { FC, memo } from 'react';\nimport { Box, Hidden, Link } from '@material-ui/core';\n\nconst Links: FC = () => {\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      width=\"30vw\"\n      justifyContent=\"flex-end\"\n      color=\"secondary.main\"\n    >\n      {Object.values(routes).map((route, index) => (\n        <Link\n          key={index}\n          style={{ margin: '1em', minWidth: '4em' }}\n          color=\"textPrimary\"\n          component={RouterLink}\n          to={route.to}\n        >\n          {route.name}\n        </Link>\n      ))}\n      <Hidden smDown>\n        <Switches />\n      </Hidden>\n    </Box>\n  );\n};\n\nexport default memo(Links);\n","import Links from '../Links';\nimport { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nconst Navbar: FC = () => {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      bgcolor=\"secondary.main\"\n    >\n      <Typography\n        variant=\"h5\"\n        style={{ marginLeft: '2em', fontStyle: 'italic' }}\n      >\n        Weather App\n      </Typography>\n      <Links />\n    </Box>\n  );\n};\n\nexport default memo(Navbar);\n","import routes from '../routes/routes';\nimport { FC } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nconst Routes: FC = () => {\n  return (\n    <Switch>\n      {Object.values(routes).map((route, index) => (\n        <Route key={index} path={route.to} exact component={route.component} />\n      ))}\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import Routes from '../pages/Routes';\nimport { FC } from 'react';\nimport { Box } from '@material-ui/core';\n\nconst Content: FC = () => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n      <Routes />\n    </Box>\n  );\n};\n\nexport default Content;\n","import Navbar from '../components/Navbar/Navbar';\nimport Content from '../components/Content';\nimport { FC } from 'react';\n\nconst Main: FC = () => {\n  return (\n    <>\n      <Navbar />\n      <Content />\n    </>\n  );\n};\n\nexport default Main;\n","import ReactDOM from 'react-dom';\nimport StoreProvider from './store/StoreProvider';\nimport ThemeProvider from './style/ThemeProvider';\nimport Main from './pages/Main';\nimport { FC } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst App: FC = () => {\n  return (\n    <StoreProvider>\n      <ThemeProvider>\n        <Router>\n          <Main />\n        </Router>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}