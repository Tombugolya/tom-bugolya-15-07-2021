{"version":3,"sources":["store/reducers/themeReducer.ts","api/AccuWeatherAPI.ts","store/reducers/weatherReducer.ts","store/reducers/rootReducer.ts","store/StoreProvider.tsx","hooks/hooks.tsx","style/ThemeProvider.tsx","components/Search.tsx","components/ResultsDisplay.tsx","components/WeatherDisplay.tsx","components/MainDisplay.tsx","pages/Home.tsx","pages/Favorites.tsx","components/ThemeSwitch.tsx","components/Links.tsx","components/Navbar.tsx","pages/Routes.tsx","index.tsx"],"names":["ThemeActionCode","initialState","dark","window","matchMedia","matches","Prefix","theme","state","action","type","TOGGLE","WeatherActionCode","process","method","query","queryParams","URLSearchParams","apikey","this","q","toString","response","fetch","AUTOCOMPLETE","to","error","data","console","log","json","key","CURRENT_CONDITIONS","FIVE_DAY_FORECAST","latitude","longitude","GEOPOSITION","celsius","favorites","current","searchResults","getCurrentPosition","a","navigator","geolocation","Promise","resolve","reject","position","latLon","coords","AccuWeatherAPI","geopositionSearch","Key","weather","ADD_FAVORITE","payload","REMOVE_FAVORITE","filter","CHANGE_CURRENT","ADD_RESULTS","results","rootReducer","combineReducers","store","createStore","StoreProvider","children","useAppDispatch","useDispatch","useAppSelector","useSelector","ThemeProvider","darkMode","darkThemeEnabled","createTheme","palette","primary","light","main","contrastText","secondary","CssBaseline","Box","width","height","color","bgcolor","Search","textFieldRef","useRef","dispatch","display","justifyContent","TextField","fullWidth","label","inputRef","Button","onClick","value","autocompleteSearch","then","values","ResultsDisplay","style","WeatherDisplay","useState","weatherText","setWeatherText","weatherIcon","setWeatherIcon","temperature","setTemperature","useAsyncEffect","currentConditions","result","WeatherText","WeatherIcon","Temperature","Value","memo","MainDisplay","length","Home","alignItems","flexDirection","Favorites","ThemeSwitch","size","Links","Link","component","RouterLink","Navbar","marginLeft","Routes","path","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3574338.chunk.js","sourcesContent":["import { AnyAction, Reducer } from 'redux';\n\ninterface ThemeState {\n  dark: boolean;\n}\n\nexport enum ThemeActionCode {\n  TOGGLE = 'TOGGLE_DARK_THEME',\n}\n\ninterface ThemeAction extends AnyAction {\n  type: ThemeActionCode;\n}\n\nconst initialState: ThemeState = {\n  dark: isBrowserDarkMode(),\n};\n\nfunction isBrowserDarkMode(): boolean {\n  if (window.matchMedia)\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  return false;\n}\n\nconst theme: Reducer<ThemeState, ThemeAction> = (\n  state: ThemeState = initialState,\n  action: ThemeAction\n) => {\n  switch (action.type) {\n    case ThemeActionCode.TOGGLE:\n      return { ...state, dark: !state.dark };\n    default:\n      return state;\n  }\n};\n\nexport default theme;\n","import to from 'await-to-js';\n\ninterface FixedLengthArray<L extends number, T> extends ArrayLike<T> {\n  length: L;\n}\n\ninterface LatLon {\n  latitude: number;\n  longitude: number;\n}\n\nexport enum Prefix {\n  AUTOCOMPLETE = 'locations/v1/cities/autocomplete',\n  CURRENT_CONDITIONS = 'currentconditions/v1',\n  FIVE_DAY_FORECAST = 'forecasts/v1/daily/5day',\n  GEOPOSITION = 'locations/v1/cities/geoposition/search',\n}\n\nexport interface AutocompleteResponse {\n  Key: string;\n  LocalizedName: string;\n  Country: { ID: string; LocalizedName: string };\n  AdministrativeArea: { ID: string; LocalizedName: string };\n}\n\ninterface CurrentConditionsResponse {\n  WeatherText: string;\n  WeatherIcon: number;\n  Temperature: {\n    Metric: {\n      Value: number;\n    };\n    Imperial: {\n      Value: number;\n    };\n  };\n}\n\ninterface SingleForecast {\n  EpochDate: number;\n  Temperature: {\n    Minimum: {\n      Value: number;\n      Unit: 'F' | 'C';\n    };\n    Maximum: {\n      Value: number;\n      Unit: 'F' | 'C';\n    };\n    Day: {\n      Icon: number;\n    };\n    Night: {\n      Icon: number;\n    };\n  };\n}\n\ninterface FiveDayForecastResponse {\n  DailyForecasts: FixedLengthArray<5, SingleForecast>;\n}\n\ninterface GeopositionResponse {\n  Key: string;\n}\n\nclass AccuWeatherApi {\n  #url: string = 'https://dataservice.accuweather.com';\n  #apiKey: string = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n  #headers = {\n    method: 'GET',\n  };\n  public async autocompleteSearch(\n    query: string\n  ): Promise<AutocompleteResponse[]> {\n    const queryParams = new URLSearchParams({\n      apikey: this.#apiKey,\n      q: query,\n    }).toString();\n    const response = fetch(\n      `${this.#url}/${Prefix.AUTOCOMPLETE}?${queryParams}`,\n      this.#headers\n    );\n    const [error, data] = await to(response);\n    if (error) console.log(error);\n    return (await data?.json()) as Promise<AutocompleteResponse[]>;\n  }\n\n  public async currentConditions(\n    key: string\n  ): Promise<CurrentConditionsResponse> {\n    const queryParams = new URLSearchParams({\n      apikey: this.#apiKey,\n    }).toString();\n    const response = fetch(\n      `${this.#url}/${Prefix.CURRENT_CONDITIONS}/${key}?${queryParams}`,\n      this.#headers\n    );\n    const [error, data] = await to(response);\n    if (error) console.log(error);\n    return (await data?.json())[0] as Promise<CurrentConditionsResponse>;\n  }\n\n  public async fiveDayForecast(key: string): Promise<FiveDayForecastResponse> {\n    const queryParams = new URLSearchParams({\n      apikey: this.#apiKey,\n    }).toString();\n    const response = fetch(\n      `${this.#url}/${Prefix.FIVE_DAY_FORECAST}/${key}?${queryParams}`,\n      this.#headers\n    );\n    const [error, data] = await to(response);\n    if (error) console.log(error);\n    return (await data?.json()) as Promise<FiveDayForecastResponse>;\n  }\n\n  public async geopositionSearch({\n    latitude,\n    longitude,\n  }: LatLon): Promise<GeopositionResponse> {\n    const queryParams = new URLSearchParams({\n      apikey: this.#apiKey,\n      q: `${latitude},${longitude}`,\n    }).toString();\n    const response = fetch(\n      `${this.#url}/${Prefix.GEOPOSITION}?${queryParams}`,\n      this.#headers\n    );\n    const [error, data] = await to(response);\n    if (error) console.log(error);\n    return (await data?.json()) as Promise<GeopositionResponse>;\n  }\n}\n\nexport default new AccuWeatherApi();\n","import AccuWeatherAPI, { AutocompleteResponse } from '../../api/AccuWeatherAPI';\nimport to from 'await-to-js';\nimport { AnyAction, Reducer } from 'redux';\n\ninterface WeatherState {\n  celsius: boolean;\n  favorites: string[];\n  current: string;\n  searchResults: AutocompleteResponse[];\n}\n\nexport enum WeatherActionCode {\n  TOGGLE = 'TOGGLE_CELSIUS_FAHRENHEIT',\n  ADD_FAVORITE = 'ADD_WEATHER_KEY_TO_FAVORITES',\n  REMOVE_FAVORITE = 'REMOVE_WEATHER_KEY_FROM_FAVORITES',\n  CHANGE_CURRENT = 'CHANGE_CURRENT_WEATHER_KEY',\n  ADD_RESULTS = 'ADD_AUTOCOMPLETE_WEATHER_RESULTS',\n}\n\ninterface WeatherAction extends AnyAction {\n  type: WeatherActionCode;\n  payload?: {\n    key?: string;\n    results?: AutocompleteResponse[];\n  };\n}\n\nconst initialState: WeatherState = {\n  celsius: true,\n  favorites: [],\n  current: '3383898',\n  searchResults: [],\n};\n\nexport async function getCurrentPosition(): Promise<string> {\n  if (navigator && navigator.geolocation) {\n    const position = await new Promise(\n      (resolve: (g: GeolocationPosition) => void, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      }\n    );\n    const latLon = {\n      longitude: position.coords.longitude,\n      latitude: position.coords.latitude,\n    };\n    const [error, data] = await to(AccuWeatherAPI.geopositionSearch(latLon));\n    console.log(data);\n    if (error) return initialState.current;\n    return data!.Key;\n  }\n  return initialState.current;\n}\n\nconst weather: Reducer<WeatherState, WeatherAction> = (\n  state: WeatherState = initialState,\n  action: WeatherAction\n) => {\n  switch (action.type) {\n    case WeatherActionCode.TOGGLE:\n      return { ...state, celsius: !state.celsius };\n    case WeatherActionCode.ADD_FAVORITE:\n      return {\n        ...state,\n        favorites: [...state.favorites, action.payload!.key!],\n      };\n    case WeatherActionCode.REMOVE_FAVORITE:\n      return {\n        ...state,\n        favorites: state.favorites.filter(\n          (key) => key !== action.payload!.key!\n        ),\n      };\n    case WeatherActionCode.CHANGE_CURRENT:\n      return {\n        ...state,\n        current: action.payload!.key!,\n      };\n    case WeatherActionCode.ADD_RESULTS:\n      return {\n        ...state,\n        searchResults: action.payload?.results!,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default weather;\n","import theme from './themeReducer';\nimport weather from './weatherReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({ theme, weather });\nexport default rootReducer;\n","import rootReducer from './reducers/rootReducer';\nimport { createStore } from 'redux';\nimport { FC } from 'react';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  rootReducer,\n  {},\n  (window as any)['__REDUX_DEVTOOLS_EXTENSION__'] &&\n    (window as any)['__REDUX_DEVTOOLS_EXTENSION__']()\n);\nconst StoreProvider: FC = ({ children }) => {\n  return <Provider store={store}>{children}</Provider>;\n};\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport default StoreProvider;\n","import { AppDispatch, RootState } from '../store/StoreProvider';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FC } from 'react';\nimport { useAppSelector } from '../hooks/hooks';\nimport { Box, createTheme, CssBaseline } from '@material-ui/core';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\n\nfunction theme(darkMode: boolean) {\n  return createTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light',\n      primary: {\n        light: '#757ce8',\n        main: '#3f50b5',\n        dark: '#002884',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n  });\n}\n\nconst ThemeProvider: FC = ({ children }) => {\n  const darkThemeEnabled = useAppSelector((state) => state.theme.dark);\n  return (\n    <MuiThemeProvider theme={theme(darkThemeEnabled)}>\n      <CssBaseline>\n        <Box\n          width=\"100vw\"\n          height=\"100vh\"\n          color=\"primary.main\"\n          bgcolor=\"background.paper\"\n        >\n          {children}\n        </Box>\n      </CssBaseline>\n    </MuiThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import AccuWeatherAPI from '../api/AccuWeatherAPI';\nimport { FC, useRef } from 'react';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { useAppDispatch } from '../hooks/hooks';\nimport { WeatherActionCode } from '../store/reducers/weatherReducer';\n\nconst Search: FC = () => {\n  const textFieldRef = useRef<HTMLInputElement>();\n  const dispatch = useAppDispatch();\n  const onSearch = () => {\n    if (textFieldRef.current.value === '')\n      dispatch({\n        type: WeatherActionCode.ADD_RESULTS,\n        payload: { results: [] },\n      });\n    else\n      AccuWeatherAPI.autocompleteSearch(textFieldRef.current.value).then(\n        (values) => {\n          dispatch({\n            type: WeatherActionCode.ADD_RESULTS,\n            payload: { results: values },\n          });\n        }\n      );\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" width=\"60vh\" justifyContent=\"space-around\">\n        <TextField\n          fullWidth\n          type=\"search\"\n          label=\"Search\"\n          inputRef={textFieldRef}\n        />\n        <Button onClick={onSearch}>Search</Button>\n      </Box>\n    </>\n  );\n};\n\nexport default Search;\n","import { FC } from 'react';\n\nconst ResultsDisplay: FC = () => {\n  return <div style={{ color: 'white' }}>THERE ARE RESULTS</div>;\n};\n\nexport default ResultsDisplay;\n","import AccuWeatherAPI from '../api/AccuWeatherAPI';\nimport useAsyncEffect from 'use-async-effect';\nimport { FC, memo, useState } from 'react';\nimport { useAppSelector } from '../hooks/hooks';\n\nconst WeatherDisplay: FC = () => {\n  const current = useAppSelector((state) => state.weather.current);\n  const celsius = useAppSelector((state) => state.weather.celsius);\n\n  const [weatherText, setWeatherText] = useState<string>();\n  const [weatherIcon, setWeatherIcon] = useState<number>();\n  const [temperature, setTemperature] = useState<number>();\n\n  useAsyncEffect(async () => {\n    const result = await AccuWeatherAPI.currentConditions(current);\n    setWeatherText(result.WeatherText);\n    setWeatherIcon(result.WeatherIcon);\n    setTemperature(result.Temperature[celsius ? 'Metric' : 'Imperial'].Value);\n  }, [current]);\n\n  return (\n    <div style={{ color: 'white' }}>\n      {weatherText} {weatherIcon} {temperature} {celsius ? '°C' : '°F'}\n    </div>\n  );\n};\n\nexport default memo(WeatherDisplay);\n","import ResultsDisplay from './ResultsDisplay';\nimport WeatherDisplay from './WeatherDisplay';\nimport { FC } from 'react';\nimport { useAppSelector } from '../hooks/hooks';\nimport { Box } from '@material-ui/core';\n\nconst MainDisplay: FC = () => {\n  const results = useAppSelector((state) => state.weather.searchResults);\n\n  return (\n    <Box height=\"75vh\" width=\"80vw\" bgcolor=\"primary.main\">\n      {results.length ? <ResultsDisplay /> : <WeatherDisplay />}\n    </Box>\n  );\n};\n\nexport default MainDisplay;\n","import Search from '../components/Search';\nimport MainDisplay from '../components/MainDisplay';\nimport useAsyncEffect from 'use-async-effect';\nimport { FC } from 'react';\nimport { Box } from '@material-ui/core';\nimport {\n  getCurrentPosition,\n  WeatherActionCode,\n} from '../store/reducers/weatherReducer';\nimport { useAppDispatch } from '../hooks/hooks';\n\nconst Home: FC = () => {\n  const dispatch = useAppDispatch();\n  useAsyncEffect(async () => {\n    const position = await getCurrentPosition();\n    console.log('get current position', position);\n    dispatch({\n      type: WeatherActionCode.CHANGE_CURRENT,\n      payload: { key: position },\n    });\n  }, []);\n\n  return (\n    <Box\n      display=\"flex\"\n      height=\"90vh\"\n      alignItems=\"center\"\n      justifyContent=\"space-around\"\n      flexDirection=\"column\"\n    >\n      <Search />\n      <MainDisplay />\n    </Box>\n  );\n};\n\nexport default Home;\n","import { FC } from 'react';\n\nconst Favorites: FC = () => {\n  return <h1>Favorites Page</h1>;\n};\n\nexport default Favorites;\n","import { ThemeActionCode } from '../store/reducers/themeReducer';\nimport { useAppDispatch, useAppSelector } from '../hooks/hooks';\nimport { Button } from '@material-ui/core';\nimport { MoonFill, SunFill } from 'react-bootstrap-icons';\n\nconst ThemeSwitch = () => {\n  const dispatch = useAppDispatch();\n  const darkThemeEnabled = useAppSelector((state) => state.theme.dark);\n\n  return (\n    <div>\n      <Button onClick={() => dispatch({ type: ThemeActionCode.TOGGLE })}>\n        {darkThemeEnabled ? <SunFill size={15} /> : <MoonFill size={15} />}\n      </Button>\n    </div>\n  );\n};\n\nexport default ThemeSwitch;\n","import ThemeSwitch from './ThemeSwitch';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { FC, memo } from 'react';\nimport { Box, Link } from '@material-ui/core';\n\n//TODO: make LINKS general file to combine in Routes and here\nconst Links: FC = () => {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-around\"\n      alignItems=\"center\"\n      width=\"20vw\"\n      color=\"secondary.main\"\n    >\n      <Link color=\"textPrimary\" component={RouterLink} to=\"/\">\n        Home\n      </Link>\n      <Link color=\"textPrimary\" component={RouterLink} to=\"/favorites\">\n        Favorites\n      </Link>\n      <ThemeSwitch />\n    </Box>\n  );\n};\n\nexport default memo(Links);\n","import Links from './Links';\nimport { FC, memo } from 'react';\nimport { Box } from '@material-ui/core';\n\nconst Navbar: FC = () => {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      width=\"100vw\"\n      height=\"10vh\"\n      bgcolor=\"secondary.main\"\n    >\n      <h1 style={{ marginLeft: '2em' }}>LOGO</h1>\n      <Links />\n    </Box>\n  );\n};\n\nexport default memo(Navbar);\n","import Home from './Home';\nimport Favorites from './Favorites';\nimport Navbar from '../components/Navbar';\nimport { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nconst Routes: FC = () => {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/favorites\" exact component={Favorites} />\n      </Switch>\n    </>\n  );\n};\n\nexport default Routes;\n","import ReactDOM from 'react-dom';\nimport StoreProvider from './store/StoreProvider';\nimport ThemeProvider from './style/ThemeProvider';\nimport Routes from './pages/Routes';\nimport { FC } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst App: FC = () => {\n  return (\n    <StoreProvider>\n      <ThemeProvider>\n        <Router>\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}